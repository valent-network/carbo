name: Main

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-20.04

    services:
      redisgraph:
        image: redislabs/redisgraph:edge
        ports:
          - 63790:6379
      redis:
        image: redis:6.0
        ports:
          - 6379:6379
      postgres:
        image: postgres:12.3
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@master
      with:
        ruby-version: 3.0.2

    - name: Get TAG ref
      id: vars
      run: echo ::set-output name=tag::$(echo $(git rev-parse --short HEAD))

    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Bundle install
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Run Rubucop to ensure no complains
      run: bundle exec rubocop

    - name: Install packages for database
      run: sudo apt-get install libpq-dev

    - name: Setup database
      run: bundle exec rake db:create db:migrate
      env:
        RAILS_ENV: test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DATABASE: recario_ci

    - name: Run RSpec
      run: bundle exec rspec
      env:
        RAILS_ENV: test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DATABASE: recario_ci
        RSPEC_RETRY_LIMIT: 3

    # https://github.com/docker/build-push-action/issues/68
    # docker-build-push does not pull image
    - name: Pull cache from docker.pkg.github.com
      run: docker pull recario/server || true

    - name: Build and push Docker images
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        build_args: BUILDKIT_INLINE_CACHE=1 GIT_COMMIT=${{steps.vars.outputs.tag}}
        cache_froms: recario/server:latest
        repository: recario/server
        tags: latest,${{steps.vars.outputs.tag}}
        always_pull: true

    - name: Get new kubeconfig
      run: |
        mkdir -p $HOME/.kube
        curl --silent -X GET -H 'Authorization: Bearer ${{ secrets.DO_TOKEN }}' https://api.digitalocean.com/v2/kubernetes/clusters/${{ secrets.K8_ID }}/kubeconfig?expiry_seconds=3600 -o $HOME/.kube/config

    - name: Update sidekiq-all image for k8 cluster
      run: kubectl set image --record deployment/sidekiq-all sidekiq-all=recario/server:${{steps.vars.outputs.tag}}

    - name: Update rpush image for k8 cluster
      run: kubectl set image --record deployment/rpush rpush=recario/server:${{steps.vars.outputs.tag}}

    - name: Update rails image for k8 cluster
      run: kubectl set image --record deployment/rails rails=recario/server:${{steps.vars.outputs.tag}}

    - name: Verify deployment
      run: kubectl rollout status deployment/rails
