class FilterableValue < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[FilterableValue, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def ad_option_type_id: () -> Integer

    def ad_option_type_id=: (Integer) -> Integer

    def ad_option_type_id?: () -> bool

    def ad_option_type_id_changed?: () -> bool

    def ad_option_type_id_change: () -> [ Integer?, Integer? ]

    def ad_option_type_id_will_change!: () -> void

    def ad_option_type_id_was: () -> Integer?

    def ad_option_type_id_previously_changed?: () -> bool

    def ad_option_type_id_previous_change: () -> Array[Integer?]?

    def ad_option_type_id_previously_was: () -> Integer?

    def ad_option_type_id_before_last_save: () -> Integer?

    def ad_option_type_id_change_to_be_saved: () -> Array[Integer?]?

    def ad_option_type_id_in_database: () -> Integer?

    def saved_change_to_ad_option_type_id: () -> Array[Integer?]?

    def saved_change_to_ad_option_type_id?: () -> bool

    def will_save_change_to_ad_option_type_id?: () -> bool

    def restore_ad_option_type_id!: () -> void

    def clear_ad_option_type_id_change: () -> void

    def name: () -> String

    def name=: (String) -> String

    def name?: () -> bool

    def name_changed?: () -> bool

    def name_change: () -> [ String?, String? ]

    def name_will_change!: () -> void

    def name_was: () -> String?

    def name_previously_changed?: () -> bool

    def name_previous_change: () -> Array[String?]?

    def name_previously_was: () -> String?

    def name_before_last_save: () -> String?

    def name_change_to_be_saved: () -> Array[String?]?

    def name_in_database: () -> String?

    def saved_change_to_name: () -> Array[String?]?

    def saved_change_to_name?: () -> bool

    def will_save_change_to_name?: () -> bool

    def restore_name!: () -> void

    def clear_name_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def raw_value: () -> String

    def raw_value=: (String) -> String

    def raw_value?: () -> bool

    def raw_value_changed?: () -> bool

    def raw_value_change: () -> [ String?, String? ]

    def raw_value_will_change!: () -> void

    def raw_value_was: () -> String?

    def raw_value_previously_changed?: () -> bool

    def raw_value_previous_change: () -> Array[String?]?

    def raw_value_previously_was: () -> String?

    def raw_value_before_last_save: () -> String?

    def raw_value_change_to_be_saved: () -> Array[String?]?

    def raw_value_in_database: () -> String?

    def saved_change_to_raw_value: () -> Array[String?]?

    def saved_change_to_raw_value?: () -> bool

    def will_save_change_to_raw_value?: () -> bool

    def restore_raw_value!: () -> void

    def clear_raw_value_change: () -> void
  end
  include GeneratedAttributeMethods

  def category: () -> Category?
  def category=: (Category?) -> Category?
  def build_category: (untyped) -> Category
  def create_category: (untyped) -> Category
  def create_category!: (untyped) -> Category
  def reload_category: () -> Category?
  def ad_option_type: () -> AdOptionType
  def ad_option_type=: (AdOptionType?) -> AdOptionType?
  def reload_ad_option_type: () -> AdOptionType?
  def build_ad_option_type: (untyped) -> AdOptionType
  def create_ad_option_type: (untyped) -> AdOptionType
  def create_ad_option_type!: (untyped) -> AdOptionType

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[FilterableValue, Integer]
    include Enumerable[FilterableValue]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[FilterableValue, Integer]
  end
end
