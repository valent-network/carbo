class UserVisibility < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[UserVisibility, ActiveRecord_Relation, top]

  module GeneratedAttributeMethods
    def user_id: () -> Integer

    def user_id=: (Integer) -> Integer

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ Integer?, Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> Array[Integer?]?

    def user_id_previously_was: () -> Integer?

    def user_id_before_last_save: () -> Integer?

    def user_id_change_to_be_saved: () -> Array[Integer?]?

    def user_id_in_database: () -> Integer?

    def saved_change_to_user_id: () -> Array[Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def data: () -> untyped?

    def data=: (untyped?) -> untyped?

    def data?: () -> bool

    def data_changed?: () -> bool

    def data_change: () -> [ untyped?, untyped? ]

    def data_will_change!: () -> void

    def data_was: () -> untyped?

    def data_previously_changed?: () -> bool

    def data_previous_change: () -> Array[untyped?]?

    def data_previously_was: () -> untyped?

    def data_before_last_save: () -> untyped?

    def data_change_to_be_saved: () -> Array[untyped?]?

    def data_in_database: () -> untyped?

    def saved_change_to_data: () -> Array[untyped?]?

    def saved_change_to_data?: () -> bool

    def will_save_change_to_data?: () -> bool

    def restore_data!: () -> void

    def clear_data_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone?

    def created_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def user: () -> User
  def user=: (User?) -> User?
  def reload_user: () -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[UserVisibility, top]
    include Enumerable[UserVisibility]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[UserVisibility, top]
  end
end
