class AdExtra < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[AdExtra, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def details: () -> untyped?

    def details=: (untyped?) -> untyped?

    def details?: () -> bool

    def details_changed?: () -> bool

    def details_change: () -> [ untyped?, untyped? ]

    def details_will_change!: () -> void

    def details_was: () -> untyped?

    def details_previously_changed?: () -> bool

    def details_previous_change: () -> Array[untyped?]?

    def details_previously_was: () -> untyped?

    def details_before_last_save: () -> untyped?

    def details_change_to_be_saved: () -> Array[untyped?]?

    def details_in_database: () -> untyped?

    def saved_change_to_details: () -> Array[untyped?]?

    def saved_change_to_details?: () -> bool

    def will_save_change_to_details?: () -> bool

    def restore_details!: () -> void

    def clear_details_change: () -> void

    def ad_id: () -> Integer

    def ad_id=: (Integer) -> Integer

    def ad_id?: () -> bool

    def ad_id_changed?: () -> bool

    def ad_id_change: () -> [ Integer?, Integer? ]

    def ad_id_will_change!: () -> void

    def ad_id_was: () -> Integer?

    def ad_id_previously_changed?: () -> bool

    def ad_id_previous_change: () -> Array[Integer?]?

    def ad_id_previously_was: () -> Integer?

    def ad_id_before_last_save: () -> Integer?

    def ad_id_change_to_be_saved: () -> Array[Integer?]?

    def ad_id_in_database: () -> Integer?

    def saved_change_to_ad_id: () -> Array[Integer?]?

    def saved_change_to_ad_id?: () -> bool

    def will_save_change_to_ad_id?: () -> bool

    def restore_ad_id!: () -> void

    def clear_ad_id_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def ad: () -> Ad
  def ad=: (Ad?) -> Ad?
  def reload_ad: () -> Ad?
  def build_ad: (untyped) -> Ad
  def create_ad: (untyped) -> Ad
  def create_ad!: (untyped) -> Ad

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[AdExtra, Integer]
    include Enumerable[AdExtra]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[AdExtra, Integer]
  end
end
