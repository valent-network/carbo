module Rpush
  module Client
    module ActiveRecord
      module Gcm
        class App < ::Rpush::Client::ActiveRecord::App
          extend _ActiveRecord_Relation_ClassMethods[Rpush::Client::ActiveRecord::Gcm::App, ActiveRecord_Relation, Integer]

          module GeneratedAttributeMethods
            def id: () -> Integer

            def id=: (Integer) -> Integer

            def id?: () -> bool

            def id_changed?: () -> bool

            def id_change: () -> [ Integer?, Integer? ]

            def id_will_change!: () -> void

            def id_was: () -> Integer?

            def id_previously_changed?: () -> bool

            def id_previous_change: () -> Array[Integer?]?

            def id_previously_was: () -> Integer?

            def id_before_last_save: () -> Integer?

            def id_change_to_be_saved: () -> Array[Integer?]?

            def id_in_database: () -> Integer?

            def saved_change_to_id: () -> Array[Integer?]?

            def saved_change_to_id?: () -> bool

            def will_save_change_to_id?: () -> bool

            def restore_id!: () -> void

            def clear_id_change: () -> void

            def name: () -> String

            def name=: (String) -> String

            def name?: () -> bool

            def name_changed?: () -> bool

            def name_change: () -> [ String?, String? ]

            def name_will_change!: () -> void

            def name_was: () -> String?

            def name_previously_changed?: () -> bool

            def name_previous_change: () -> Array[String?]?

            def name_previously_was: () -> String?

            def name_before_last_save: () -> String?

            def name_change_to_be_saved: () -> Array[String?]?

            def name_in_database: () -> String?

            def saved_change_to_name: () -> Array[String?]?

            def saved_change_to_name?: () -> bool

            def will_save_change_to_name?: () -> bool

            def restore_name!: () -> void

            def clear_name_change: () -> void

            def environment: () -> String?

            def environment=: (String?) -> String?

            def environment?: () -> bool

            def environment_changed?: () -> bool

            def environment_change: () -> [ String?, String? ]

            def environment_will_change!: () -> void

            def environment_was: () -> String?

            def environment_previously_changed?: () -> bool

            def environment_previous_change: () -> Array[String?]?

            def environment_previously_was: () -> String?

            def environment_before_last_save: () -> String?

            def environment_change_to_be_saved: () -> Array[String?]?

            def environment_in_database: () -> String?

            def saved_change_to_environment: () -> Array[String?]?

            def saved_change_to_environment?: () -> bool

            def will_save_change_to_environment?: () -> bool

            def restore_environment!: () -> void

            def clear_environment_change: () -> void

            def certificate: () -> String?

            def certificate=: (String?) -> String?

            def certificate?: () -> bool

            def certificate_changed?: () -> bool

            def certificate_change: () -> [ String?, String? ]

            def certificate_will_change!: () -> void

            def certificate_was: () -> String?

            def certificate_previously_changed?: () -> bool

            def certificate_previous_change: () -> Array[String?]?

            def certificate_previously_was: () -> String?

            def certificate_before_last_save: () -> String?

            def certificate_change_to_be_saved: () -> Array[String?]?

            def certificate_in_database: () -> String?

            def saved_change_to_certificate: () -> Array[String?]?

            def saved_change_to_certificate?: () -> bool

            def will_save_change_to_certificate?: () -> bool

            def restore_certificate!: () -> void

            def clear_certificate_change: () -> void

            def password: () -> String?

            def password=: (String?) -> String?

            def password?: () -> bool

            def password_changed?: () -> bool

            def password_change: () -> [ String?, String? ]

            def password_will_change!: () -> void

            def password_was: () -> String?

            def password_previously_changed?: () -> bool

            def password_previous_change: () -> Array[String?]?

            def password_previously_was: () -> String?

            def password_before_last_save: () -> String?

            def password_change_to_be_saved: () -> Array[String?]?

            def password_in_database: () -> String?

            def saved_change_to_password: () -> Array[String?]?

            def saved_change_to_password?: () -> bool

            def will_save_change_to_password?: () -> bool

            def restore_password!: () -> void

            def clear_password_change: () -> void

            def connections: () -> Integer

            def connections=: (Integer) -> Integer

            def connections?: () -> bool

            def connections_changed?: () -> bool

            def connections_change: () -> [ Integer?, Integer? ]

            def connections_will_change!: () -> void

            def connections_was: () -> Integer?

            def connections_previously_changed?: () -> bool

            def connections_previous_change: () -> Array[Integer?]?

            def connections_previously_was: () -> Integer?

            def connections_before_last_save: () -> Integer?

            def connections_change_to_be_saved: () -> Array[Integer?]?

            def connections_in_database: () -> Integer?

            def saved_change_to_connections: () -> Array[Integer?]?

            def saved_change_to_connections?: () -> bool

            def will_save_change_to_connections?: () -> bool

            def restore_connections!: () -> void

            def clear_connections_change: () -> void

            def created_at: () -> ActiveSupport::TimeWithZone

            def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

            def created_at?: () -> bool

            def created_at_changed?: () -> bool

            def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

            def created_at_will_change!: () -> void

            def created_at_was: () -> ActiveSupport::TimeWithZone?

            def created_at_previously_changed?: () -> bool

            def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

            def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

            def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

            def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

            def created_at_in_database: () -> ActiveSupport::TimeWithZone?

            def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

            def saved_change_to_created_at?: () -> bool

            def will_save_change_to_created_at?: () -> bool

            def restore_created_at!: () -> void

            def clear_created_at_change: () -> void

            def updated_at: () -> ActiveSupport::TimeWithZone

            def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

            def updated_at?: () -> bool

            def updated_at_changed?: () -> bool

            def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

            def updated_at_will_change!: () -> void

            def updated_at_was: () -> ActiveSupport::TimeWithZone?

            def updated_at_previously_changed?: () -> bool

            def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

            def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

            def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

            def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

            def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

            def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

            def saved_change_to_updated_at?: () -> bool

            def will_save_change_to_updated_at?: () -> bool

            def restore_updated_at!: () -> void

            def clear_updated_at_change: () -> void

            def type: () -> String

            def type=: (String) -> String

            def type?: () -> bool

            def type_changed?: () -> bool

            def type_change: () -> [ String?, String? ]

            def type_will_change!: () -> void

            def type_was: () -> String?

            def type_previously_changed?: () -> bool

            def type_previous_change: () -> Array[String?]?

            def type_previously_was: () -> String?

            def type_before_last_save: () -> String?

            def type_change_to_be_saved: () -> Array[String?]?

            def type_in_database: () -> String?

            def saved_change_to_type: () -> Array[String?]?

            def saved_change_to_type?: () -> bool

            def will_save_change_to_type?: () -> bool

            def restore_type!: () -> void

            def clear_type_change: () -> void

            def auth_key: () -> String?

            def auth_key=: (String?) -> String?

            def auth_key?: () -> bool

            def auth_key_changed?: () -> bool

            def auth_key_change: () -> [ String?, String? ]

            def auth_key_will_change!: () -> void

            def auth_key_was: () -> String?

            def auth_key_previously_changed?: () -> bool

            def auth_key_previous_change: () -> Array[String?]?

            def auth_key_previously_was: () -> String?

            def auth_key_before_last_save: () -> String?

            def auth_key_change_to_be_saved: () -> Array[String?]?

            def auth_key_in_database: () -> String?

            def saved_change_to_auth_key: () -> Array[String?]?

            def saved_change_to_auth_key?: () -> bool

            def will_save_change_to_auth_key?: () -> bool

            def restore_auth_key!: () -> void

            def clear_auth_key_change: () -> void

            def client_id: () -> String?

            def client_id=: (String?) -> String?

            def client_id?: () -> bool

            def client_id_changed?: () -> bool

            def client_id_change: () -> [ String?, String? ]

            def client_id_will_change!: () -> void

            def client_id_was: () -> String?

            def client_id_previously_changed?: () -> bool

            def client_id_previous_change: () -> Array[String?]?

            def client_id_previously_was: () -> String?

            def client_id_before_last_save: () -> String?

            def client_id_change_to_be_saved: () -> Array[String?]?

            def client_id_in_database: () -> String?

            def saved_change_to_client_id: () -> Array[String?]?

            def saved_change_to_client_id?: () -> bool

            def will_save_change_to_client_id?: () -> bool

            def restore_client_id!: () -> void

            def clear_client_id_change: () -> void

            def client_secret: () -> String?

            def client_secret=: (String?) -> String?

            def client_secret?: () -> bool

            def client_secret_changed?: () -> bool

            def client_secret_change: () -> [ String?, String? ]

            def client_secret_will_change!: () -> void

            def client_secret_was: () -> String?

            def client_secret_previously_changed?: () -> bool

            def client_secret_previous_change: () -> Array[String?]?

            def client_secret_previously_was: () -> String?

            def client_secret_before_last_save: () -> String?

            def client_secret_change_to_be_saved: () -> Array[String?]?

            def client_secret_in_database: () -> String?

            def saved_change_to_client_secret: () -> Array[String?]?

            def saved_change_to_client_secret?: () -> bool

            def will_save_change_to_client_secret?: () -> bool

            def restore_client_secret!: () -> void

            def clear_client_secret_change: () -> void

            def access_token: () -> String?

            def access_token=: (String?) -> String?

            def access_token?: () -> bool

            def access_token_changed?: () -> bool

            def access_token_change: () -> [ String?, String? ]

            def access_token_will_change!: () -> void

            def access_token_was: () -> String?

            def access_token_previously_changed?: () -> bool

            def access_token_previous_change: () -> Array[String?]?

            def access_token_previously_was: () -> String?

            def access_token_before_last_save: () -> String?

            def access_token_change_to_be_saved: () -> Array[String?]?

            def access_token_in_database: () -> String?

            def saved_change_to_access_token: () -> Array[String?]?

            def saved_change_to_access_token?: () -> bool

            def will_save_change_to_access_token?: () -> bool

            def restore_access_token!: () -> void

            def clear_access_token_change: () -> void

            def access_token_expiration: () -> ActiveSupport::TimeWithZone?

            def access_token_expiration=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

            def access_token_expiration?: () -> bool

            def access_token_expiration_changed?: () -> bool

            def access_token_expiration_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

            def access_token_expiration_will_change!: () -> void

            def access_token_expiration_was: () -> ActiveSupport::TimeWithZone?

            def access_token_expiration_previously_changed?: () -> bool

            def access_token_expiration_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

            def access_token_expiration_previously_was: () -> ActiveSupport::TimeWithZone?

            def access_token_expiration_before_last_save: () -> ActiveSupport::TimeWithZone?

            def access_token_expiration_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

            def access_token_expiration_in_database: () -> ActiveSupport::TimeWithZone?

            def saved_change_to_access_token_expiration: () -> Array[ActiveSupport::TimeWithZone?]?

            def saved_change_to_access_token_expiration?: () -> bool

            def will_save_change_to_access_token_expiration?: () -> bool

            def restore_access_token_expiration!: () -> void

            def clear_access_token_expiration_change: () -> void

            def apn_key: () -> String?

            def apn_key=: (String?) -> String?

            def apn_key?: () -> bool

            def apn_key_changed?: () -> bool

            def apn_key_change: () -> [ String?, String? ]

            def apn_key_will_change!: () -> void

            def apn_key_was: () -> String?

            def apn_key_previously_changed?: () -> bool

            def apn_key_previous_change: () -> Array[String?]?

            def apn_key_previously_was: () -> String?

            def apn_key_before_last_save: () -> String?

            def apn_key_change_to_be_saved: () -> Array[String?]?

            def apn_key_in_database: () -> String?

            def saved_change_to_apn_key: () -> Array[String?]?

            def saved_change_to_apn_key?: () -> bool

            def will_save_change_to_apn_key?: () -> bool

            def restore_apn_key!: () -> void

            def clear_apn_key_change: () -> void

            def apn_key_id: () -> String?

            def apn_key_id=: (String?) -> String?

            def apn_key_id?: () -> bool

            def apn_key_id_changed?: () -> bool

            def apn_key_id_change: () -> [ String?, String? ]

            def apn_key_id_will_change!: () -> void

            def apn_key_id_was: () -> String?

            def apn_key_id_previously_changed?: () -> bool

            def apn_key_id_previous_change: () -> Array[String?]?

            def apn_key_id_previously_was: () -> String?

            def apn_key_id_before_last_save: () -> String?

            def apn_key_id_change_to_be_saved: () -> Array[String?]?

            def apn_key_id_in_database: () -> String?

            def saved_change_to_apn_key_id: () -> Array[String?]?

            def saved_change_to_apn_key_id?: () -> bool

            def will_save_change_to_apn_key_id?: () -> bool

            def restore_apn_key_id!: () -> void

            def clear_apn_key_id_change: () -> void

            def team_id: () -> String?

            def team_id=: (String?) -> String?

            def team_id?: () -> bool

            def team_id_changed?: () -> bool

            def team_id_change: () -> [ String?, String? ]

            def team_id_will_change!: () -> void

            def team_id_was: () -> String?

            def team_id_previously_changed?: () -> bool

            def team_id_previous_change: () -> Array[String?]?

            def team_id_previously_was: () -> String?

            def team_id_before_last_save: () -> String?

            def team_id_change_to_be_saved: () -> Array[String?]?

            def team_id_in_database: () -> String?

            def saved_change_to_team_id: () -> Array[String?]?

            def saved_change_to_team_id?: () -> bool

            def will_save_change_to_team_id?: () -> bool

            def restore_team_id!: () -> void

            def clear_team_id_change: () -> void

            def bundle_id: () -> String?

            def bundle_id=: (String?) -> String?

            def bundle_id?: () -> bool

            def bundle_id_changed?: () -> bool

            def bundle_id_change: () -> [ String?, String? ]

            def bundle_id_will_change!: () -> void

            def bundle_id_was: () -> String?

            def bundle_id_previously_changed?: () -> bool

            def bundle_id_previous_change: () -> Array[String?]?

            def bundle_id_previously_was: () -> String?

            def bundle_id_before_last_save: () -> String?

            def bundle_id_change_to_be_saved: () -> Array[String?]?

            def bundle_id_in_database: () -> String?

            def saved_change_to_bundle_id: () -> Array[String?]?

            def saved_change_to_bundle_id?: () -> bool

            def will_save_change_to_bundle_id?: () -> bool

            def restore_bundle_id!: () -> void

            def clear_bundle_id_change: () -> void

            def feedback_enabled: () -> bool?

            def feedback_enabled=: (bool?) -> bool?

            def feedback_enabled?: () -> bool

            def feedback_enabled_changed?: () -> bool

            def feedback_enabled_change: () -> [ bool?, bool? ]

            def feedback_enabled_will_change!: () -> void

            def feedback_enabled_was: () -> bool?

            def feedback_enabled_previously_changed?: () -> bool

            def feedback_enabled_previous_change: () -> Array[bool?]?

            def feedback_enabled_previously_was: () -> bool?

            def feedback_enabled_before_last_save: () -> bool?

            def feedback_enabled_change_to_be_saved: () -> Array[bool?]?

            def feedback_enabled_in_database: () -> bool?

            def saved_change_to_feedback_enabled: () -> Array[bool?]?

            def saved_change_to_feedback_enabled?: () -> bool

            def will_save_change_to_feedback_enabled?: () -> bool

            def restore_feedback_enabled!: () -> void

            def clear_feedback_enabled_change: () -> void
          end
          include GeneratedAttributeMethods
          def notifications: () -> Rpush::Client::ActiveRecord::Notification::ActiveRecord_Associations_CollectionProxy
          def notifications=: (Rpush::Client::ActiveRecord::Notification::ActiveRecord_Associations_CollectionProxy | Array[Rpush::Client::ActiveRecord::Notification]) -> (Rpush::Client::ActiveRecord::Notification::ActiveRecord_Associations_CollectionProxy | Array[Rpush::Client::ActiveRecord::Notification])
          def notification_ids: () -> Array[Integer]
          def notification_ids=: (Array[Integer]) -> Array[Integer]

          module GeneratedRelationMethods
          end

          class ActiveRecord_Relation < ::ActiveRecord::Relation
            include GeneratedRelationMethods
            include _ActiveRecord_Relation[Rpush::Client::ActiveRecord::Gcm::App, Integer]
            include Enumerable[Rpush::Client::ActiveRecord::Gcm::App]
          end

          class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
            include GeneratedRelationMethods
            include _ActiveRecord_Relation[Rpush::Client::ActiveRecord::Gcm::App, Integer]
          end
        end
      end
    end
  end
end
